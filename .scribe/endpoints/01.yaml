name: 'Author Management'
description: |-

  Endpoint to manage authors
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the authors.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"99db5475-c19d-40a9-9494-9da43cb68225","name":"Helga Bergstrom PhD","email":"stella37@example.com"},{"id":"99db5475-c325-4243-97e9-0344a355ee08","name":"Mr. Sigrid Miller","email":"wisozk.mckenzie@example.com"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: pgg
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: pschneider@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: pgg
      email: pschneider@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display an author by ID.'
      description: return
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
        type: string
        custom: []
    cleanUrlParameters:
      id: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified Author by ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
        type: string
        custom: []
    cleanUrlParameters:
      id: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 50 characters.'
        required: true
        example: deoihipqeydlgeojnjym
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: rhand@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: deoihipqeydlgeojnjym
      email: rhand@example.org
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
