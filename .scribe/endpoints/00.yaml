name: 'Author Management'
description: |-

  Endpoint to manage authors
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the authors.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"99f629e0-e873-4154-aa10-52d086d1bb9b","name":"Abigale Turner","email":"moore.tessie@example.com","description":null},{"id":"99f629e0-ea32-4e28-b1e5-0208771b0fda","name":"Prof. Yvette Kulas II","email":"gwatsica@example.net","description":null}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d56Vg8D3a6faE1chebk4ZPv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new author.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of author.'
        required: true
        example: 'Isaac Johnson'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of author.'
        required: true
        example: deron61@example.org
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Et quia assumenda et iusto quae perferendis assumenda similique.'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Isaac Johnson'
      email: deron61@example.org
      description: 'Et quia assumenda et iusto quae perferendis assumenda similique.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99f629e0-ee1b-4457-9b88-93cd7dee7ee6","name":"Prof. Davonte Pfannerstill III","email":"gunnar.ward@example.net","description":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 14Va8356bcdDkZagePE6hvf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display an author by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Author ID'
        required: true
        example: eos
        type: string
        custom: []
    cleanUrlParameters:
      id: eos
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99f629e0-f11b-4915-a347-07625dc80f4c","name":"Zena Carter","email":"cronin.pierce@example.org","description":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4Z6618EabdDVckvP53gahef'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified Author by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
        type: string
        custom: []
    cleanUrlParameters:
      id: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of author.'
        required: true
        example: 'Isaac Johnson'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of author.'
        required: true
        example: jlarson@example.net
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Et mollitia magni reprehenderit voluptates.'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Isaac Johnson'
      email: jlarson@example.net
      description: 'Et mollitia magni reprehenderit voluptates.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99f629e0-f374-45d0-bbb1-b3264c393d44","name":"Mrs. Nikki McGlynn II","email":"hickle.juliet@example.com","description":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6aeD48Zgk5d63vbVPah1fcE'
    controller: null
    method: null
    route: null
    custom: []
