name: 'Author Management'
description: |-

  Endpoint to manage authors
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the authors.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"99f620a9-8f4f-41ff-a2c9-82839af1c3c7","name":"Lydia Ward","email":"ajacobs@example.net","description":null},{"id":"99f620a9-9d2f-4926-8cf6-3557ca941b85","name":"Liliane Lubowitz","email":"desiree.lockman@example.com","description":null}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z1a56akc3E46fg8dDvheVPb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new author.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of author.'
        required: true
        example: 'Isaac Johnson'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of author.'
        required: true
        example: sstreich@example.com
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Commodi veniam dolore ut dignissimos in asperiores.'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Isaac Johnson'
      email: sstreich@example.com
      description: 'Commodi veniam dolore ut dignissimos in asperiores.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99f620a9-a67b-4f6f-8622-524c4523f4d9","name":"Grayce Bruen DVM","email":"hill.ahmad@example.org","description":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3hPfDVe1Ekvb8a645dcag6Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display an author by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Author ID'
        required: true
        example: amet
        type: string
        custom: []
    cleanUrlParameters:
      id: amet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99f620a9-a91d-4356-a513-0f889d0900a4","name":"Aurelio Hodkiewicz MD","email":"neil.mccullough@example.org","description":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PE4Va5fk6dc6eD1avhZ8bg3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified Author by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
        type: string
        custom: []
    cleanUrlParameters:
      id: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of author.'
        required: true
        example: 'Isaac Johnson'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of author.'
        required: true
        example: schroeder.cleve@example.com
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Voluptate dolorem consectetur quod minima animi magni occaecati.'
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Isaac Johnson'
      email: schroeder.cleve@example.com
      description: 'Voluptate dolorem consectetur quod minima animi magni occaecati.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99f620a9-ab70-4eaa-a0f5-8fcaab49bd0d","name":"Alyce Harris","email":"roy.leannon@example.org","description":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3h8agfvacb4DV5P16ZEde6k'
    controller: null
    method: null
    route: null
    custom: []
