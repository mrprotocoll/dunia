name: 'Product Management'
description: |-

  Endpoints to manage products
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/admin/products
    metadata:
      groupName: 'Product Management'
      groupDescription: |-

        Endpoints to manage products
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product.'
        required: true
        example: rerum
        type: string
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: true
        example: 16063.0324
        type: number
        custom: []
      description:
        name: description
        description: 'The description of the product.'
        required: true
        example: 'Earum aperiam velit ut recusandae a est ex.'
        type: string
        custom: []
      categories:
        name: categories
        description: 'An array of category IDs associated with the product.'
        required: true
        example:
          - voluptatem
        type: 'string[]'
        custom: []
      tags:
        name: tags
        description: 'An array of tag IDs associated with the product.'
        required: true
        example:
          - blanditiis
        type: 'string[]'
        custom: []
      author:
        name: author
        description: 'The ID of the author of the product.'
        required: true
        example: 8
        type: integer
        custom: []
      'images[]':
        name: 'images[]'
        description: 'An array of image files for the product.'
        required: false
        example: null
        type: file
        custom: []
    cleanBodyParameters:
      name: rerum
      price: 16063.0324
      description: 'Earum aperiam velit ut recusandae a est ex.'
      categories:
        - voluptatem
      tags:
        - blanditiis
      author: 8
    fileParameters:
      images:
        - null
      'images[]': null
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"name":null,"price":"0.00","description":null,"author":null,"categories":[],"tags":[],"images":[],"reviews":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
               "data": {
                   "id": 1,
                   "name": "Sample Product",
                   "author_id": 1,
                   "price": 19.99,
                   "description": "A description of the sample product.",
                   "categories": [
                       {
                           "id": 1,
                           "name": "Category A"
                       },
                       {
                           "id": 2,
                           "name": "Category B"
                       }
                   ],
                   "tags": [
                       {
                           "id": 1,
                           "name": "Tag X"
                       },
                       {
                           "id": 2,
                           "name": "Tag Y"
                       }
                   ]
               }
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e134E6kfb5av6hPVDZgadc8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/admin/products/{id}'
    metadata:
      groupName: 'Product Management'
      groupDescription: |-

        Endpoints to manage products
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 99d35264-8076-49a5-a8d5-8cd88f85a773
        type: string
        custom: []
    cleanUrlParameters:
      id: 99d35264-8076-49a5-a8d5-8cd88f85a773
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: molestiae
        type: string
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: minima
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: sed
        type: string
        custom: []
      categories:
        name: categories
        description: ''
        required: false
        example: null
        type: 'string[]'
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example: null
        type: 'string[]'
        custom: []
      author:
        name: author
        description: ''
        required: true
        example: aut
        type: string
        custom: []
    cleanBodyParameters:
      name: molestiae
      price: minima
      description: sed
      author: aut
    fileParameters:
      images:
        - null
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"name":null,"price":"0.00","description":null,"author":null,"categories":[],"tags":[],"images":[],"reviews":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g356hk8v6ac4VZdP1bfeDEa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/admin/products/{product_id}/images'
    metadata:
      groupName: 'Product Management'
      groupDescription: |-

        Endpoints to manage products
      subgroup: ''
      subgroupDescription: ''
      title: 'Add images to a product'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 99d35264-8076-49a5-a8d5-8cd88f85a773
        type: string
        custom: []
    cleanUrlParameters:
      product_id: 99d35264-8076-49a5-a8d5-8cd88f85a773
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
    cleanBodyParameters: []
    fileParameters:
      images:
        - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer adDbe3g6v1cfaEVkZP486h5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/products/{product_id}/images/{productImage_id}'
    metadata:
      groupName: 'Product Management'
      groupDescription: |-

        Endpoints to manage products
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete image from product'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 99d35264-8076-49a5-a8d5-8cd88f85a773
        type: string
        custom: []
      productImage_id:
        name: productImage_id
        description: 'The ID of the productImage.'
        required: true
        example: 99d35a23-2f11-406d-afde-f05b8efb9968
        type: string
        custom: []
    cleanUrlParameters:
      product_id: 99d35264-8076-49a5-a8d5-8cd88f85a773
      productImage_id: 99d35a23-2f11-406d-afde-f05b8efb9968
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h5a1v6VkZdP6bDgac4E3f8e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: 'Product Management'
      groupDescription: |-

        Endpoints to manage products
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve a paginated list of products with optional filters.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'Search for products by name (partial match).'
        required: false
        example: voluptates
        type: string
        custom: []
      author:
        name: author
        description: "Search for products by author's name."
        required: false
        example: molestiae
        type: string
        custom: []
      category:
        name: category
        description: 'Search for products by category name.'
        required: false
        example: iusto
        type: string
        custom: []
    cleanQueryParameters:
      name: voluptates
      author: molestiae
      category: iusto
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: et
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: porro
        type: string
        custom: []
      categories:
        name: categories
        description: ''
        required: false
        example: null
        type: 'string[]'
        custom: []
      tags:
        name: tags
        description: ''
        required: false
        example: null
        type: 'string[]'
        custom: []
      author:
        name: author
        description: ''
        required: true
        example: et
        type: string
        custom: []
    cleanBodyParameters:
      name: qui
      price: et
      description: porro
      author: et
    fileParameters:
      images:
        - null
    responses:
      -
        status: 200
        content: '{"data":[{"id":null,"name":null,"price":"0.00","description":null,"author":null,"categories":[],"tags":[],"images":[],"reviews":[]},{"id":null,"name":null,"price":"0.00","description":null,"author":null,"categories":[],"tags":[],"images":[],"reviews":[]}]}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "name": "Product A",
                      "author_id": 1,
                      "price": 19.99,
                      "description": "Description of Product A",
                      "category": {
                          "id": 2,
                          "name": "Category X"
                      },
                      "author": {
                          "id": 1,
                          "name": "Author Y"
                      }
                  },
                  {
                      "id": 2,
                      "name": "Product B",
                      "author_id": 2,
                      "price": 29.99,
                      "description": "Description of Product B",
                      "category": {
                          "id": 3,
                          "name": "Category Z"
                      },
                      "author": {
                          "id": 2,
                          "name": "Author Z"
                      }
                  }
              ],
              "links": {
                  "first": "https://api.example.com/products?page=1",
                  "last": "https://api.example.com/products?page=3",
                  "prev": null,
                  "next": "https://api.example.com/products?page=2"
              },
              "meta": {
                  "current_page": 1,
                  "from": 1,
                  "last_page": 3,
                  "path": "https://api.example.com/products",
                  "per_page": 10,
                  "to": 10,
                  "total": 25
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: 'Product Management'
      groupDescription: |-

        Endpoints to manage products
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific product by ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Product ID'
        required: true
        example: perferendis
        type: string
        custom: []
    cleanUrlParameters:
      id: perferendis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":null,"name":null,"price":"0.00","description":null,"author":null,"categories":[],"tags":[],"images":[],"reviews":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
