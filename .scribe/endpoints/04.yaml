name: Authentication
description: |-

  Endpoint to manage user authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/admin/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoint to manage user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new admin.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: uj
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: mekhi77@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: exercitationem
        type: string
        custom: []
    cleanBodyParameters:
      name: uj
      email: mekhi77@example.org
      password: exercitationem
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99e72421-71c8-4465-8de6-279a0ca28f3d","name":"Dr. Delbert Trantow","email":"duane.hane@example.net"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
                "error": "Account already exist, kindly login"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoint to manage user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Admin Login.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: hartmann.roma@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'Ntar:B!pN'
        type: string
        custom: []
    cleanBodyParameters:
      email: hartmann.roma@example.org
      password: 'Ntar:B!pN'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "token": "generated_token"
               "data": {
                   "id": 1,
                   "name": "User",
                   "email": "user@email.com"
               }
           }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
               "error": "The provided credentials are incorrect."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoint to manage user authentication
      subgroup: ''
      subgroupDescription: ''
      title: Logout.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: |-
          {
               "message": "Logged out successfully."
           }
        headers: []
        description: ''
        custom: []
      -
        status: 402
        content: |-
          {
               "message": "Unauthorized user"
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1a6kda3h8cbEDgfv4ZV5P6e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoint to manage user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: wwitszmoeqrqdifloffkvd
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: samir.corkery@example.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: cupiditate
        type: string
        custom: []
    cleanBodyParameters:
      name: wwitszmoeqrqdifloffkvd
      email: samir.corkery@example.com
      password: cupiditate
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99e72421-856c-4d47-b4c5-5d5dcbdb6303","name":"Ms. Estel Graham IV","email":"dach.lavinia@example.net"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoint to manage user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: vicente.beier@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'r]6^<nc!&6sm[E_$UTX.'
        type: string
        custom: []
    cleanBodyParameters:
      email: vicente.beier@example.net
      password: 'r]6^<nc!&6sm[E_$UTX.'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "token": "generated_token"
               "data": {
                   "id": 1,
                   "name": "User",
                   "email": "user@email.com"
               }
           }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
               "error": "The provided credentials are incorrect."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/auth/google
    metadata:
      groupName: Authentication
      groupDescription: |-

        Endpoint to manage user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Authenticate and log in a user using Google OAuth.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The Google OAuth access token.'
        required: true
        example: est
        type: string
        custom: []
    cleanBodyParameters:
      token: est
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "token": "generated_token",
              "data": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "johndoe@example.com",
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "error": "Unauthorized."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "error": "Validation failed."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
