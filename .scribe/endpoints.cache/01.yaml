## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Author Management'
description: |-

  Endpoint to manage authors
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the authors.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"99dde27f-14c6-4701-a1a3-a8e0ed11da4a","name":"Xzavier Lindgren Jr.","email":"ythiel@example.org"},{"id":"99dde27f-1934-43b8-86c1-cce863c842ff","name":"Mckenzie Stroman","email":"kayli.cummerata@example.org"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gbad6cEk6Zf4vhD5Ve1a3P8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new author.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of author.'
        required: true
        example: 'Isaac Johnson'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of author.'
        required: true
        example: karley55@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Isaac Johnson'
      email: karley55@example.net
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99dde27f-2ce0-44a6-9b79-072e580c522a","name":"Maddison Quigley","email":"sam21@example.com"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6hg3dPZ6kvfDeb5a481acEV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display an author by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Author ID'
        required: true
        example: qui
        type: string
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99dde27f-2f94-448d-8e3e-c0b0ddfbf6c8","name":"Mathew Leuschke","email":"tony.crona@example.org"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ge6PZdaDcVhEvfba3516k48'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified Author by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
        type: string
        custom: []
    cleanUrlParameters:
      id: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of author.'
        required: true
        example: 'Isaac Johnson'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of author.'
        required: true
        example: magnus.morissette@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Isaac Johnson'
      email: magnus.morissette@example.net
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99dde27f-319f-4fc5-9245-07638ff03ff5","name":"Mose Kling IV","email":"bethel.hammes@example.net"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hEbP1fcDgda3avek56VZ864'
    controller: null
    method: null
    route: null
    custom: []
