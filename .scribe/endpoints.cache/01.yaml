## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Author Management'
description: |-

  Endpoint to manage authors
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the authors.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"99e33e4a-07f9-4314-9ada-b1eb14890903","name":"Jeanie Ferry MD","email":"casandra.daugherty@example.net"},{"id":"99e33e4a-19bc-4e8b-a83b-2c254a986678","name":"Edyth Erdman II","email":"schmidt.colleen@example.org"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gePEhVfkDbad36Z18a5v6c4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/authors
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new author.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of author.'
        required: true
        example: 'Isaac Johnson'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of author.'
        required: true
        example: ondricka.amya@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Isaac Johnson'
      email: ondricka.amya@example.org
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99e33e4a-1fbe-43fa-bb9f-920ff0be9f1d","name":"Dr. Jordon Streich","email":"oconner.walker@example.org"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VbadD6eg1vEa4k6fh538cPZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Display an author by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'Author ID'
        required: true
        example: in
        type: string
        custom: []
    cleanUrlParameters:
      id: in
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99e33e4a-2433-4d68-a221-87b60325ae42","name":"Mr. Bernardo Kuvalis II","email":"dominic57@example.net"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86eP1dEac4k5V63avDbgfZh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/admin/authors/{id}'
    metadata:
      groupName: 'Author Management'
      groupDescription: |-

        Endpoint to manage authors
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified Author by ID.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the author.'
        required: true
        example: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
        type: string
        custom: []
    cleanUrlParameters:
      id: 99cf7e87-ed51-4cdb-ba3b-4557421ceda3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of author.'
        required: true
        example: 'Isaac Johnson'
        type: string
        custom: []
      email:
        name: email
        description: 'Email of author.'
        required: true
        example: lorenza89@example.org
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Isaac Johnson'
      email: lorenza89@example.org
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"99e33e4a-26be-4130-b792-d38a3eea2b82","name":"Miss Ayla Bednar V","email":"pbayer@example.org"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vEV6gh5aZaPDce186dfb4k3'
    controller: null
    method: null
    route: null
    custom: []
